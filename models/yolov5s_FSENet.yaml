# Ultralytics üöÄ AGPL-3.0 License - https://ultralytics.com/license

# Parameters
nc: 80 # number of classes
depth_multiple: 0.33 # model depth multiple
width_multiple: 0.50 # layer channel multiple
anchors:
  - [10, 13, 16, 30, 33, 23]
  - [30, 61, 62, 45, 59, 119]
  - [116, 90, 156, 198, 373, 326]

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  [
    [-1, 1, Conv, [64, 6, 2, 2]], #0
    [-1, 1, Conv, [128, 3, 2]], #1
    [-1, 3, C3, [128]],         #2
    [-1, 1, Conv, [256, 3, 2]], #3
    [-1, 6, C3, [256]],         #4 - C'1
    [-1, 1, Conv, [512, 3, 2]], #5
    [-1, 9, C3, [512]],         #6
    [-1, 1, Conv, [1024, 3, 2]], #7 - C'2
    [-1, 3, C3, [1024]],        #8 - C'3
    [-1, 1, SPPF, [1024, 5]], #9 - P3
  ]



# YOLOv5 v6.0 head
head: [
    [-1, 1, Conv, [512, 1, 1]], #10
    [-1, 1, nn.Upsample, [None, 2, "nearest"]], #11
    [[-1, 6], 1, Concat, [1]], #12
    [-1, 3, C3, [512, False]], #13 - P2

    [-1, 1, Conv, [256, 1, 1]], #14
    [-1, 1, nn.Upsample, [None, 2, "nearest"]], #15
    [[-1, 4], 1, Concat, [1]], #16
    [-1, 3, C3, [256, False]], #17 - P1 - D1

    #FSM
    [[17, 13, 9], 1, FSM,[]],  # 18: FSM tr·∫£ v·ªÅ tuple 3 output
    [ 18, 1, Get, [ 0 ] ],  # 19: l·∫•y output 0 c·ªßa FSM (P_s_minus1_star) - N1
    [ 18, 1, Get, [ 1 ] ],  # 20: l·∫•y output 1 c·ªßa FSM (P_s_star) - N2
    [ 18, 1, Get, [ 2 ] ],  # 21: l·∫•y output 2 c·ªßa FSM (P_s_plus1) - N3

    [19, 1, Conv, [256, 3, 2]], #22
    [[-1, 20], 1, Concat, [1]], #23
    [-1, 3, C3, [512, False]], #24 - D2

    [-1, 1, Conv, [512, 3, 2]], #25
    [[-1, 21], 1, Concat, [1]], #26
    [-1, 3, C3, [1024, False]], # 27 - D3

    [ [17, 24, 27], 1, FEM, [] ],  # 28: FEM tr·∫£ v·ªÅ tuple 3 output
    [ 28, 1, Get, [ 0 ] ],  # 29: l·∫•y output 0 c·ªßa FEM
    [ 28, 1, Get, [ 1 ] ],  # 30: l·∫•y output 1 c·ªßa FEM
    [ 28, 1, Get, [ 2 ] ],  # 31: l·∫•y output 2 c·ªßa FEM

    [ [29, 30, 31], 1, FSM, [] ],  # 32: FSM tr·∫£ v·ªÅ tuple 3 output
    [ 32, 1, Get, [ 0 ] ],  # 33: l·∫•y output 0 c·ªßa FSM (P_s_minus1_star) - F1
    [ 32, 1, Get, [ 1 ] ],  # 34: l·∫•y output 1 c·ªßa FSM (P_s_star) - F2
    [ 32, 1, Get, [ 2 ] ],  # 35: l·∫•y output 2 c·ªßa FSM (P_s_plus1) - F3


    [[33, 34, 35], 1, Detect, [nc, anchors]], # Detect
  ]
